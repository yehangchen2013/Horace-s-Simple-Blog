<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Horace的博客</title><link>https://yehangchen2013.github.io</link><description>记录一下Horace的日常</description><copyright>Horace的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://s2.loli.net/2024/06/16/Ws6G2tMhKBAqvVy.jpg</url><title>avatar</title><link>https://yehangchen2013.github.io</link></image><lastBuildDate>Fri, 21 Jun 2024 06:48:41 +0000</lastBuildDate><managingEditor>Horace的博客</managingEditor><ttl>60</ttl><webMaster>Horace的博客</webMaster><item><title>Nexus密码重置</title><link>https://yehangchen2013.github.io/post/Nexus-mi-ma-zhong-zhi.html</link><description>## 方法/步骤&#13;
&#13;
1.  使用xshell连接上安装nexus的服务器，使用find / -name 'security.xml'命令查找nexus的安全配置文件位置![](https://cdn.nlark.com/yuque/0/2022/png/25612577/1654135112127-33f90a40-5c95-4e40-8556-b8309dbd61a2.png)&#13;
2.  找到nexus的security.xml文件之后，使用vi security.xml进入文件，使用“/admin”查找管理员用户节点![](https://cdn.nlark.com/yuque/0/2022/png/25612577/1654135112099-99811731-99cc-49bc-997a-3d66f6d85265.png)&#13;
3.  然后将&lt;password&gt;密码节点使用'f865b53623b121fd34ee5426c792e5c33af8c227'字符串替换![](https://cdn.nlark.com/yuque/0/2022/png/25612577/1654135112117-fc9f578b-fb28-4243-be2b-efefc77f717f.png)&#13;
4.  替换完成之后，使用:wq对文件进行保存退出。</description><guid isPermaLink="true">https://yehangchen2013.github.io/post/Nexus-mi-ma-zhong-zhi.html</guid><pubDate>Fri, 21 Jun 2024 06:48:19 +0000</pubDate></item><item><title>Windows使用小鹤双拼</title><link>https://yehangchen2013.github.io/post/Windows-shi-yong-xiao-he-shuang-pin.html</link><description>## 开启小鹤双拼 ##&#13;
```&#13;
Windows Registry Editor Version 5.00&#13;
[HKEY_CURRENT_USER\SOFTWARE\Microsoft\InputMethod\Settings\CHS]&#13;
'EnableExtraDomainType'=dword:00000001&#13;
'EnableSmartSelfLearning'=dword:00000000&#13;
'EnableVMode'=dword:00000000&#13;
'EnableHap'=dword:00000000&#13;
'EnablePeopleName'=dword:00000000&#13;
'DoublePinyinScheme'=dword:0000000a&#13;
'EnableUMode'=dword:00000000&#13;
'EnableSmartFuzzyPinyin'=dword:00000000&#13;
'UserDefinedDoublePinyinScheme0'='小鹤双拼*2*^*iuvdjhcwfg^xmlnpbksqszxkrltvyovt'&#13;
'Enable Dynamic Candidate Ranking'=dword:00000000&#13;
'Enable self-learning'=dword:00000000&#13;
'Expand Double Pinyin'=dword:00000000&#13;
'Enable Double Pinyin'=dword:00000001&#13;
'LangBar Force On'=dword:00000000&#13;
'PinyinMixEnable'=dword:00000000&#13;
'ToolBarEnabled'=dword:00000000&#13;
```&#13;
## 关闭小鹤双拼 ##&#13;
```&#13;
Windows Registry Editor Version 5.00&#13;
&#13;
[HKEY_CURRENT_USER\SOFTWARE\Microsoft\InputMethod\Settings\CHS]&#13;
'Enable Double Pinyin'=dword:00000000&#13;
'DoublePinyinScheme'=dword:00000000&#13;
'UserDefinedDoublePinyinScheme0'=-&#13;
```&#13;
&#13;
以上两个代码块保存为reg添加到注册表即可。</description><guid isPermaLink="true">https://yehangchen2013.github.io/post/Windows-shi-yong-xiao-he-shuang-pin.html</guid><pubDate>Fri, 21 Jun 2024 06:44:57 +0000</pubDate></item><item><title>Postman 可视化JSON</title><link>https://yehangchen2013.github.io/post/Postman%20-ke-shi-hua-JSON.html</link><description>### 最普通的展示 ###&#13;
```javascript&#13;
获取请求的 JSON 数据&#13;
&#13;
var dataParsed = object;&#13;
const formattedDataHtmlFormat = JSON.stringify(dataParsed, null, 2).replace(/ /g, '&amp;nbsp;').replace(/\n/g, '&lt;br /&gt;');&#13;
pm.visualizer.set(formattedDataHtmlFormat);&#13;
```&#13;
&#13;
&#13;
&#13;
### 带颜色的普通展示 ###&#13;
&#13;
```javascript&#13;
let template = `&#13;
&lt;script src='https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js?autoload=true&amp;amp;skin=sunburst&amp;amp;lang=js' defer&gt;&lt;/script&gt;&#13;
&lt;pre class='prettyprint'&gt;{{raw}}&lt;/pre&gt;&#13;
&lt;/div&gt;&#13;
`&#13;
&#13;
pm.visualizer.set(template, {&#13;
	response: object,&#13;
	raw: JSON.stringify(object, null, 2)&#13;
});&#13;
```&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
### 表格形式 ###&#13;
&#13;
```javascript&#13;
// GO TO THE END OF THE TEST SCRIPT.&#13;
var template = `&#13;
&lt;style&gt;&#13;
        .fill,&#13;
body,&#13;
html {&#13;
  height: 100%&#13;
}&#13;
&#13;
#json_vl,&#13;
.td_head,&#13;
.td_row_even,&#13;
.td_row_odd {&#13;
  font-size: small&#13;
}&#13;
&#13;
#json_pnl,&#13;
#xxa,&#13;
.navbar-header,&#13;
.navbar-nav,&#13;
.navbar-nav&gt;li,&#13;
.td_head {&#13;
  float: left&#13;
}&#13;
&#13;
.fill {&#13;
  min-height: 100%&#13;
}&#13;
&#13;
#json_vl {&#13;
  font-family: Consolas, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace&#13;
}&#13;
&#13;
#widget {&#13;
  width: 100%&#13;
}&#13;
&#13;
.top_size {&#13;
  height: 51px&#13;
}&#13;
&#13;
#all_panels {&#13;
  height: 100%;&#13;
  min-height: 100%&#13;
}&#13;
&#13;
#aboutLnk {&#13;
  position: fixed;&#13;
  right: 10px;&#13;
  top: 15px&#13;
}&#13;
&#13;
#inner_text {&#13;
  display: block;&#13;
  position: absolute;&#13;
  height: auto;&#13;
  bottom: 0;&#13;
  top: 0;&#13;
  left: 0;&#13;
  right: 0;&#13;
  margin-top: 51px;&#13;
  margin-bottom: 0&#13;
}&#13;
&#13;
#json_pnl {&#13;
  background-color: #ccc;&#13;
  width: 33.3%&#13;
}&#13;
&#13;
#xxa {&#13;
  background-color: #E8E8E8;&#13;
  width: 66.7%&#13;
}&#13;
&#13;
#table_pnl,&#13;
#tree_pnl {&#13;
  background-color: #E8E8E8;&#13;
  float: left;&#13;
  width: 50%&#13;
}&#13;
&#13;
#sharethis {&#13;
  position: fixed;&#13;
  right: 80px;&#13;
  top: 10px&#13;
}&#13;
&#13;
#inner_tbl {&#13;
  padding-left: 2px&#13;
}&#13;
&#13;
.td_row_even {&#13;
  padding: 2px;&#13;
  background-color: #F6F4F0&#13;
}&#13;
&#13;
.td_row_odd {&#13;
  padding: 2px;&#13;
  background-color: #FFF&#13;
}&#13;
&#13;
.td_head {&#13;
  padding: 2px;&#13;
  font-weight: 700&#13;
}&#13;
&#13;
input,&#13;
p,&#13;
select,&#13;
td,&#13;
textarea,&#13;
th {&#13;
  font-size: 1em&#13;
}&#13;
&#13;
table,&#13;
td,&#13;
th {&#13;
  border: 1px solid gray&#13;
}&#13;
&#13;
textarea {&#13;
  -moz-box-sizing: border-box;&#13;
  -webkit-box-sizing: border-box;&#13;
  box-sizing: border-box;&#13;
  display: block;&#13;
  width: 100%;&#13;
  height: 100%;&#13;
  margin: 0;&#13;
  padding: 4px;&#13;
  border: 1px solid #333;&#13;
  overflow-y: auto;&#13;
  overflow-x: hidden&#13;
}&#13;
&#13;
*,&#13;
html {&#13;
  font-family: Verdana, Arial, Helvetica, sans-serif&#13;
}&#13;
&#13;
form,&#13;
h1,&#13;
h2,&#13;
h3,&#13;
h4,&#13;
h5,&#13;
li,&#13;
p,&#13;
ul {&#13;
  margin: 0;&#13;
  padding: 0&#13;
}&#13;
&#13;
img {&#13;
  border: none&#13;
}&#13;
&#13;
p {&#13;
  margin: 0 0 1em&#13;
}&#13;
&#13;
table {&#13;
  font-size: 100%;&#13;
  background-color: white;&#13;
}&#13;
&#13;
ol.tree {&#13;
  padding: 0 0 0 30px;&#13;
  width: 300px&#13;
}&#13;
&#13;
li {&#13;
  position: relative;&#13;
  margin-left: -15px;&#13;
  list-style: none&#13;
}&#13;
&#13;
li.file {&#13;
  margin-left: -1px !important&#13;
}&#13;
&#13;
li.file a {&#13;
  background: url(leaf.png)0 5px no-repeat;&#13;
  color: #000;&#13;
  padding-left: 12px;&#13;
  text-decoration: none;&#13;
  display: block;&#13;
  font-size: small&#13;
}&#13;
&#13;
li.file a[href$='.css'],&#13;
li.file a[href$='.js'],&#13;
li.file a[href*='.pdf'],&#13;
li.file a[href*='.html'] {&#13;
  background: url(http://www.thecssninja.com/demo/css_tree/document.png)no-repeat&#13;
}&#13;
&#13;
li input {&#13;
  position: absolute;&#13;
  left: 0;&#13;
  margin-left: 0;&#13;
  opacity: 0;&#13;
  z-index: 2;&#13;
  cursor: pointer;&#13;
  height: 1em;&#13;
  width: 1em;&#13;
  top: 0&#13;
}&#13;
&#13;
li input+ol {&#13;
  background: url(http://www.thecssninja.com/demo/css_tree/toggle-small-expand.png)40px -3px no-repeat;&#13;
  margin: -20px 0 0 -44px;&#13;
  height: 1em;&#13;
  padding: 1.563em 0 0 80px&#13;
}&#13;
&#13;
li label.lbl_array,&#13;
li label.lbl_obj {&#13;
  display: block;&#13;
  padding-left: 33px;&#13;
  margin-bottom: 2px&#13;
}&#13;
&#13;
li input+ol&gt;li {&#13;
  display: none;&#13;
  margin-left: -14px !important;&#13;
  padding-left: 1px&#13;
}&#13;
&#13;
li label.lbl_obj {&#13;
  background: url(folder.png)15px 1px no-repeat;&#13;
  cursor: pointer&#13;
}&#13;
&#13;
li label.lbl_array {&#13;
  background: url(array.png)15px 1px no-repeat;&#13;
  cursor: pointer&#13;
}&#13;
&#13;
li input:checked+ol {&#13;
  background: url(http://www.thecssninja.com/demo/css_tree/toggle-small.png)40px -3px no-repeat;&#13;
  margin: -20px 0 0 -44px;&#13;
  padding: 1.563em 0 0 80px;&#13;
  height: auto&#13;
}&#13;
&#13;
li input:checked+ol&gt;li {&#13;
  display: block;&#13;
  margin: 0 0 .125em&#13;
}&#13;
&#13;
li input:checked+ol&gt;li:last-child {&#13;
  margin: 0 0 .063em&#13;
}&#13;
&#13;
.container {&#13;
  width: 970px;&#13;
  max-width: none !important&#13;
}&#13;
&#13;
.col-xs-4 {&#13;
  padding-top: 15px;&#13;
  padding-bottom: 15px;&#13;
  background-color: #eee;&#13;
  background-color: rgba(86, 61, 124, .15);&#13;
  border: 1px solid #ddd;&#13;
  border: 1px solid rgba(86, 61, 124, .2)&#13;
}&#13;
&#13;
    &lt;/style&gt;&#13;
&lt;div id='html'&gt;&#13;
&lt;input type='text' id='json'&gt;&#13;
&lt;script src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js'&gt;&lt;/script&gt;&#13;
&lt;!--&lt;script src='json2table.js'&gt;&lt;/script&gt;--&gt;&#13;
&lt;script&gt;&#13;
$(function() {&#13;
    pm.getData((err, data) =&gt; {&#13;
        $('#json').val(JSON.stringify(data.json));&#13;
        json2table('#html');&#13;
    });&#13;
});&#13;
&#13;
function call(a) {&#13;
    $('#json').val(JSON.stringify(a, void 0, 2));&#13;
    json2table()&#13;
}&#13;
&#13;
function json2table(selector) {&#13;
    $(selector).html(buildTable(getJsonVar()));&#13;
}&#13;
&#13;
function getJsonVar() {&#13;
    try {&#13;
        var a = $.parseJSON($('#json').val());&#13;
        $('#json').val(JSON.stringify(a, void 0, 2));&#13;
        return a&#13;
    } catch (e) {&#13;
        //return $('#error_msg').text(e.message), $('#errorModal').modal('show'), {}&#13;
        alert(e);&#13;
    }&#13;
}&#13;
&#13;
function buildTable(a) {&#13;
    var e = document.createElement('table'),&#13;
        d, b;&#13;
    if (isArray(a)) return buildArray(a);&#13;
    for (var c in a) 'object' != typeof a[c] || isArray(a[c]) ? 'object' == typeof a[c] &amp;&amp; isArray(a[c]) ? (d = e.insertRow(-1), b = d.insertCell(-1), b.colSpan = 2, b.innerHTML = '&lt;div class='td_head'&gt;' + encodeText(c) + '&lt;/div&gt;&lt;table style='width:100%'&gt;' + $(buildArray(a[c]), !1).html() + '&lt;/table&gt;') : (d = e.insertRow(-1), b = d.insertCell(-1), b.innerHTML = '&lt;div class='td_head'&gt;' + encodeText(c) + '&lt;/div&gt;', d = d.insertCell(-1), d.innerHTML = '&lt;div class='td_row_even'&gt;' +&#13;
        encodeText(a[c]) + '&lt;/div&gt;') : (d = e.insertRow(-1), b = d.insertCell(-1), b.colSpan = 2, b.innerHTML = '&lt;div class='td_head'&gt;' + encodeText(c) + '&lt;/div&gt;&lt;table style='width:100%'&gt;' + $(buildTable(a[c]), !1).html() + '&lt;/table&gt;');&#13;
    return e&#13;
}&#13;
&#13;
function buildArray(a) {&#13;
    var e = document.createElement('table'),&#13;
        d, b, c = !1,&#13;
        p = !1,&#13;
        m = {},&#13;
        h = -1,&#13;
        n = 0,&#13;
        l;&#13;
    l = '';&#13;
    if (0 == a.length) return '&lt;div&gt;&lt;/div&gt;';&#13;
    d = e.insertRow(-1);&#13;
    for (var f = 0; f &lt; a.length; f++)&#13;
        if ('object' != typeof a[f] || isArray(a[f])) 'object' == typeof a[f] &amp;&amp; isArray(a[f]) ? (b = d.insertCell(h), b.colSpan = 2, b.innerHTML = '&lt;div class='td_head'&gt;&lt;/div&gt;&lt;table style='width:100%'&gt;' + $(buildArray(a[f]), !1).html() + '&lt;/table&gt;', c = !0) : p || (h += 1, p = !0, b = d.insertCell(h), m.empty = h, b.innerHTML = '&lt;div class='td_head'&gt;&amp;nbsp;&lt;/div&gt;');&#13;
        else&#13;
            for (var k in a[f]) l =&#13;
                '-' + k, l in m || (c = !0, h += 1, b = d.insertCell(h), m[l] = h, b.innerHTML = '&lt;div class='td_head'&gt;' + encodeText(k) + '&lt;/div&gt;');&#13;
    c || e.deleteRow(0);&#13;
    n = h + 1;&#13;
    for (f = 0; f &lt; a.length; f++)&#13;
        if (d = e.insertRow(-1), td_class = isEven(f) ? 'td_row_even' : 'td_row_odd', 'object' != typeof a[f] || isArray(a[f]))&#13;
            if ('object' == typeof a[f] &amp;&amp; isArray(a[f]))&#13;
                for (h = m.empty, c = 0; c &lt; n; c++) b = d.insertCell(c), b.className = td_class, l = c == h ? '&lt;table style='width:100%'&gt;' + $(buildArray(a[f]), !1).html() + '&lt;/table&gt;' : ' ', b.innerHTML = '&lt;div class='' + td_class + ''&gt;' + encodeText(l) +&#13;
                    '&lt;/div&gt;';&#13;
            else&#13;
                for (h = m.empty, c = 0; c &lt; n; c++) b = d.insertCell(c), l = c == h ? a[f] : ' ', b.className = td_class, b.innerHTML = '&lt;div class='' + td_class + ''&gt;' + encodeText(l) + '&lt;/div&gt;';&#13;
    else {&#13;
        for (c = 0; c &lt; n; c++) b = d.insertCell(c), b.className = td_class, b.innerHTML = '&lt;div class='' + td_class + ''&gt;&amp;nbsp;&lt;/div&gt;';&#13;
        for (k in a[f]) c = a[f], l = '-' + k, h = m[l], b = d.cells[h], b.className = td_class, 'object' != typeof c[k] || isArray(c[k]) ? 'object' == typeof c[k] &amp;&amp; isArray(c[k]) ? b.innerHTML = '&lt;table style='width:100%'&gt;' + $(buildArray(c[k]), !1).html() + '&lt;/table&gt;' : b.innerHTML =&#13;
            '&lt;div class='' + td_class + ''&gt;' + encodeText(c[k]) + '&lt;/div&gt;' : b.innerHTML = '&lt;table style='width:100%'&gt;' + $(buildTable(c[k]), !1).html() + '&lt;/table&gt;'&#13;
    }&#13;
    return e&#13;
}&#13;
&#13;
function encodeText(a) {&#13;
    return $('&lt;div /&gt;').text(a).html()&#13;
}&#13;
&#13;
function isArray(a) {&#13;
    return '[object Array]' === Object.prototype.toString.call(a)&#13;
}&#13;
&#13;
function isEven(a) {&#13;
    return 0 == a % 2&#13;
}&#13;
&lt;/script&gt;`;&#13;
&#13;
&#13;
// In case you only want a specific property, change it here.&#13;
//&#13;
// Default: You can set the entire JSON response using pm.response.json()&#13;
let tableProps = {&#13;
    json: object&#13;
};&#13;
&#13;
pm.visualizer.set(template, tableProps);&#13;
```。</description><guid isPermaLink="true">https://yehangchen2013.github.io/post/Postman%20-ke-shi-hua-JSON.html</guid><pubDate>Fri, 21 Jun 2024 06:42:41 +0000</pubDate></item><item><title>Git Tag管理</title><link>https://yehangchen2013.github.io/post/Git%20Tag-guan-li.html</link><description>删除本地 tag&#13;
```shell&#13;
git tag -d $(git tag -l)&#13;
```&#13;
&#13;
删除远程 tag&#13;
```shell&#13;
git push origin --delete $(git tag -l)&#13;
&#13;
git push origin --delete refs/tags/&lt;tag_name&gt;&#13;
```&#13;
&#13;
```text&#13;
实际在删除所有远程tag的时候&#13;
需要先删除本地所有tag&#13;
然后拉最新的所有tag&#13;
然后根据本地tag的名字删除所有远程tag&#13;
```。</description><guid isPermaLink="true">https://yehangchen2013.github.io/post/Git%20Tag-guan-li.html</guid><pubDate>Fri, 21 Jun 2024 06:38:58 +0000</pubDate></item><item><title>关于Docker清理Overlay2占用磁盘空间</title><link>https://yehangchen2013.github.io/post/guan-yu-Docker-qing-li-Overlay2-zhan-yong-ci-pan-kong-jian.html</link><description>&#13;
首先，我们需要了解Overlay2是一种在Docker中用于实现镜像分层的存储驱动程序。</description><guid isPermaLink="true">https://yehangchen2013.github.io/post/guan-yu-Docker-qing-li-Overlay2-zhan-yong-ci-pan-kong-jian.html</guid><pubDate>Fri, 21 Jun 2024 06:38:35 +0000</pubDate></item><item><title>Linux 代码别名合集</title><link>https://yehangchen2013.github.io/post/Linux%20-dai-ma-bie-ming-he-ji.html</link><description># 定义函数 #&#13;
&#13;
### 定义task函数快速查看任务 ###&#13;
&#13;
```shell&#13;
# 定义一个名为task的函数&#13;
task() {&#13;
  # 将传入的参数存储在变量中&#13;
  search_term='$1'&#13;
  # 运行ps aux命令并过滤结果&#13;
  ps aux | grep '$search_term' | grep -v 'grep'&#13;
}&#13;
&#13;
# 保存文件后，使更改生效&#13;
source ~/.bashrc  # 如果你用的是bash&#13;
source ~/.zshrc   # 如果你用的是zsh&#13;
&#13;
```&#13;
&#13;
### 定义pid函数快速查看任务 ###&#13;
&#13;
```shell&#13;
# 定义一个名为task的函数&#13;
pid() {&#13;
  # 将传入的参数存储在变量中&#13;
  search_term='$1'&#13;
  # 运行ps aux命令并过滤结果&#13;
  ps aux | grep '$search_term' | grep -v 'grep' | awk '{print $2}'&#13;
}&#13;
&#13;
# 保存文件后，使更改生效&#13;
source ~/.bashrc  # 如果你用的是bash&#13;
source ~/.zshrc   # 如果你用的是zsh&#13;
&#13;
```&#13;
&#13;
### 定义docker_ip函数快速查看ip ###&#13;
&#13;
```shell&#13;
function docker_ip() {&#13;
    docker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq) $1&#13;
}&#13;
```。</description><guid isPermaLink="true">https://yehangchen2013.github.io/post/Linux%20-dai-ma-bie-ming-he-ji.html</guid><pubDate>Fri, 21 Jun 2024 06:37:57 +0000</pubDate></item><item><title>正则表达式详细解释</title><link>https://yehangchen2013.github.io/post/zheng-ze-biao-da-shi-xiang-xi-jie-shi.html</link><description>[正则表达式检测](https://regexr.com/)&#13;
&#13;
![image.png](https://s2.loli.net/2024/06/17/LtkswWRmAoKf67j.png)&#13;
![image.png](https://s2.loli.net/2024/06/17/zK2QMofp9ImXN3t.png)&#13;
![image.png](https://s2.loli.net/2024/06/17/DAktWnVyBYGOaq5.png)&#13;
![image.png](https://s2.loli.net/2024/06/17/pUQtFx5cn3ueC2v.png)&#13;
![image.png](https://s2.loli.net/2024/06/17/yHeKwRgYO2i8WP7.png)&#13;
![image.png](https://s2.loli.net/2024/06/17/y1DMKHV2eZApvGn.png)&#13;
![image.png](https://s2.loli.net/2024/06/17/yF9KzpsxYqfOeCE.png)&#13;
![image.png](https://s2.loli.net/2024/06/17/dNHyps6GZ7QK2lq.png)&#13;
![image.png](https://s2.loli.net/2024/06/17/Qsq5LaKkyVru8EC.png)&#13;
&#13;
&#13;
### 邮件 ###&#13;
```&#13;
^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$&#13;
```&#13;
&#13;
### 网址 ###&#13;
```&#13;
^(https?:\/\/)?([a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5})(:[0-9]{1,5})?(\/.*)?$&#13;
```&#13;
&#13;
### 金额 ###&#13;
```&#13;
^\d+(?:\.\d+)?$&#13;
```&#13;
&#13;
### 日期 ###&#13;
```&#13;
^(?:19|20)\d\d-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$&#13;
```&#13;
&#13;
### 时间 ###&#13;
```&#13;
^(1[0-2]|0?[1-9]):[0-5][0-9] (AM|PM)$&#13;
```&#13;
&#13;
### 电话 ###&#13;
```&#13;
^\+?[1-9]\d{1,14}$&#13;
```&#13;
&#13;
### 密码强度 ###&#13;
```&#13;
^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[^\w\s]).{8,}$&#13;
```&#13;
&#13;
### 文件扩展名 ###&#13;
```&#13;
^.+\.(jpg|jpeg|png|gif|pdf)$&#13;
```&#13;
&#13;
### IP地址 ###&#13;
```&#13;
^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$&#13;
```。</description><guid isPermaLink="true">https://yehangchen2013.github.io/post/zheng-ze-biao-da-shi-xiang-xi-jie-shi.html</guid><pubDate>Fri, 21 Jun 2024 06:35:43 +0000</pubDate></item><item><title>Hello,这是第一篇文章</title><link>https://yehangchen2013.github.io/post/Hello%2C-zhe-shi-di-yi-pian-wen-zhang.html</link><description>大家好，这是第一篇文章，我会在这里留下一些，我的个人工作记录，技巧等。</description><guid isPermaLink="true">https://yehangchen2013.github.io/post/Hello%2C-zhe-shi-di-yi-pian-wen-zhang.html</guid><pubDate>Thu, 20 Jun 2024 15:08:30 +0000</pubDate></item></channel></rss>